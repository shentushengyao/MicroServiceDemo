<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oauth.sys.persist.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="SysUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="sex" jdbcType="BIT" property="sex"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="modify_by" jdbcType="BIGINT" property="modifyBy"/>
        <result column="modify_ip" jdbcType="VARCHAR" property="modifyIp"/>
        <result column="modify_time" jdbcType="DATE" property="modifyTime"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
    </resultMap>
    <resultMap id="RoleMap" type="SysRole">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="discription" jdbcType="VARCHAR" property="discription"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="modify_by" jdbcType="BIGINT" property="modifyBy"/>
        <result column="modify_ip" jdbcType="VARCHAR" property="modifyIp"/>
        <result column="modify_time" jdbcType="DATE" property="modifyTime"/>
        <collection property="resources" ofType="SysResource"
                    javaType="java.util.ArrayList" select="getResources"
                    column="id">
        </collection>
    </resultMap>
    <resultMap id="ResourceMap" type="SysResource">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="discription" jdbcType="VARCHAR" property="discription"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="modify_by" jdbcType="BIGINT" property="modifyBy"/>
        <result column="modify_ip" jdbcType="VARCHAR" property="modifyIp"/>
        <result column="modify_time" jdbcType="DATE" property="modifyTime"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
    </resultMap>
    <resultMap id="UserRoleResourceResultMap" type="SysUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="sex" jdbcType="BIT" property="sex"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="modify_by" jdbcType="BIGINT" property="modifyBy"/>
        <result column="modify_ip" jdbcType="VARCHAR" property="modifyIp"/>
        <result column="modify_time" jdbcType="DATE" property="modifyTime"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <collection property="roles" ofType="SysRole"
                    javaType="java.util.ArrayList" select="getRoles"
                    column="id">
        </collection>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        ,
        username,
        password,
        name,
        age,
        sex,
        is_delete,
        create_by,
        create_time,
        modify_by,
        modify_ip,
        modify_time,
        version
    </sql>
    <select id="selectByExample" parameterType="com.oauth.sys.persist.model.SysUserExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.oauth.sys.persist.model.SysUserExample">
        delete from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.oauth.sys.persist.model.SysUser">
        insert into sys_user (id, username, password,
                              name, age, sex, is_delete,
                              create_by, create_time, modify_by,
                              modify_ip, modify_time, version)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=BIT}, #{isDelete,jdbcType=BIT},
                #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=DATE}, #{modifyBy,jdbcType=BIGINT},
                #{modifyIp,jdbcType=VARCHAR}, #{modifyTime,jdbcType=DATE}, #{version,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.oauth.sys.persist.model.SysUser">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyBy != null">
                modify_by,
            </if>
            <if test="modifyIp != null">
                modify_ip,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=BIT},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BIT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=DATE},
            </if>
            <if test="modifyBy != null">
                #{modifyBy,jdbcType=BIGINT},
            </if>
            <if test="modifyIp != null">
                #{modifyIp,jdbcType=VARCHAR},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=DATE},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.oauth.sys.persist.model.SysUserExample"
            resultType="java.lang.Long">
        select count(*) from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectRoleResourceByPrimaryKey" parameterType="java.lang.Long" resultMap="UserRoleResourceResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="getRoles" parameterType="java.lang.Long" resultMap="RoleMap">
        SELECT
            t_r.*
        FROM
            sys_user_role t_u_r
                LEFT JOIN sys_role t_r
                          ON t_u_r.role_id = t_r.id
        WHERE t_u_r.user_id = #{userId, jdbcType=BIGINT}
    </select>
    <select id="getResources" parameterType="java.lang.Long" resultMap="ResourceMap">
        SELECT
            t_r.*
        FROM
            sys_role_resource t_r_r
                LEFT JOIN sys_resource t_r
                          ON t_r_r.resource_id = t_r.id and t_r_r.enable = 0
        WHERE t_r_r.role_id = #{userId, jdbcType=BIGINT}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=BIT},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=BIT},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=DATE},
            </if>
            <if test="record.modifyBy != null">
                modify_by = #{record.modifyBy,jdbcType=BIGINT},
            </if>
            <if test="record.modifyIp != null">
                modify_ip = #{record.modifyIp,jdbcType=VARCHAR},
            </if>
            <if test="record.modifyTime != null">
                modify_time = #{record.modifyTime,jdbcType=DATE},
            </if>
            <if test="record.version != null">
                version = #{record.version,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_user
        set id = #{record.id,jdbcType=BIGINT},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        sex = #{record.sex,jdbcType=BIT},
        is_delete = #{record.isDelete,jdbcType=BIT},
        create_by = #{record.createBy,jdbcType=BIGINT},
        create_time = #{record.createTime,jdbcType=DATE},
        modify_by = #{record.modifyBy,jdbcType=BIGINT},
        modify_ip = #{record.modifyIp,jdbcType=VARCHAR},
        modify_time = #{record.modifyTime,jdbcType=DATE},
        version = #{record.version,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.oauth.sys.persist.model.SysUser">
        update sys_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=BIT},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=BIT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=DATE},
            </if>
            <if test="modifyBy != null">
                modify_by = #{modifyBy,jdbcType=BIGINT},
            </if>
            <if test="modifyIp != null">
                modify_ip = #{modifyIp,jdbcType=VARCHAR},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=DATE},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.oauth.sys.persist.model.SysUser">
        update sys_user
        set username    = #{username,jdbcType=VARCHAR},
            password    = #{password,jdbcType=VARCHAR},
            name        = #{name,jdbcType=VARCHAR},
            age         = #{age,jdbcType=INTEGER},
            sex         = #{sex,jdbcType=BIT},
            is_delete   = #{isDelete,jdbcType=BIT},
            create_by   = #{createBy,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=DATE},
            modify_by   = #{modifyBy,jdbcType=BIGINT},
            modify_ip   = #{modifyIp,jdbcType=VARCHAR},
            modify_time = #{modifyTime,jdbcType=DATE},
            version     = #{version,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>